---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import AmazonButton from '../../components/AmazonButton.astro';
import AmazonCTAButton from '../../components/AmazonCTAButton.astro';

export async function getStaticPaths() {
  const reviewEntries = await getCollection('reviews');
  return reviewEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Calculate reading time (rough estimate: 200 words per minute)
const readingTime = Math.ceil(entry.body.split(' ').length / 200);

const formattedDate = new Date(entry.data.publishDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

const schemaMarkup = {
  "@context": "https://schema.org",
  "@type": "Review",
  "itemReviewed": {
    "@type": "Product",
    "name": entry.data.title,
    "image": entry.data.image,
    "description": entry.data.description
  },
  "reviewRating": {
    "@type": "Rating",
    "ratingValue": entry.data.rating,
    "bestRating": 5
  },
  "author": {
    "@type": "Person",
    "name": entry.data.author
  },
  "publisher": {
    "@type": "Organization",
    "name": "Blicksel Picks"
  },
  "datePublished": entry.data.publishDate
};
---

<BaseLayout 
  title={`${entry.data.title} Review | Blicksel Picks`} 
  description={entry.data.description}
  image={entry.data.image}
>
  <Header />
  
  <main class="min-h-screen bg-gray-50">
    <!-- Hero Section -->
    <div class="bg-white shadow-sm">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <nav class="flex items-center space-x-2 text-sm text-gray-500 mb-6">
          <a href="/" class="hover:text-primary-600">Home</a>
          <span>/</span>
          <a href="/reviews" class="hover:text-primary-600">Reviews</a>
          <span>/</span>
          <a href={`/categories/${entry.data.category.toLowerCase().replace(/\s+/g, '-').replace(/&/g, 'and')}`} class="hover:text-primary-600">{entry.data.category}</a>
          <span>/</span>
          <span class="text-gray-900">{entry.data.title}</span>
        </nav>
        
        <div class="mb-6">
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-primary-100 text-primary-800">
            {entry.data.category}
          </span>
        </div>
        
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
          {entry.data.title}
        </h1>
        
        <p class="text-xl text-gray-600 mb-8 leading-relaxed">
          {entry.data.description}
        </p>
        
        <div class="flex items-center justify-between flex-wrap gap-4 mb-8">
          <div class="flex items-center space-x-4 text-sm text-gray-500">
            <div class="flex items-center">
              <div class="w-10 h-10 bg-gradient-to-br from-primary-500 to-accent-500 rounded-full flex items-center justify-center mr-3">
                <span class="text-white font-semibold text-sm">{entry.data.author.charAt(0)}</span>
              </div>
              <div>
                <div class="font-medium text-gray-900">{entry.data.author}</div>
                <div class="text-gray-500">Reviewer</div>
              </div>
            </div>
            <span>•</span>
            <time datetime={entry.data.publishDate}>{formattedDate}</time>
            <span>•</span>
            <span>{readingTime} min read</span>
          </div>
          
          <div class="flex items-center space-x-4">
            <div class="flex items-center">
              {Array.from({ length: 5 }, (_, i) => (
                <svg 
                  key={i}
                  class={`w-5 h-5 ${i < Math.floor(entry.data.rating) ? 'text-yellow-400' : 'text-gray-300'}`}
                  fill="currentColor" 
                  viewBox="0 0 20 20"
                >
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                </svg>
              ))}
              <span class="ml-2 text-lg font-semibold text-gray-900">{entry.data.rating}/5</span>
            </div>
            <span class="text-2xl font-bold text-accent-600">{entry.data.price}</span>
          </div>
        </div>
        
        <!-- Quick Summary -->
        <div class="bg-gray-50 rounded-lg p-6 mb-8">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h3 class="font-semibold text-green-600 mb-3">Pros</h3>
              <ul class="space-y-2">
                {entry.data.pros.slice(0, 3).map(pro => (
                  <li class="flex items-start text-sm">
                    <svg class="w-4 h-4 text-green-500 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                    </svg>
                    {pro}
                  </li>
                ))}
              </ul>
            </div>
            <div>
              <h3 class="font-semibold text-red-600 mb-3">Cons</h3>
              <ul class="space-y-2">
                {entry.data.cons.slice(0, 3).map(con => (
                  <li class="flex items-start text-sm">
                    <svg class="w-4 h-4 text-red-500 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                    </svg>
                    {con}
                  </li>
                ))}
              </ul>
            </div>
          </div>
          <div class="mt-6 pt-6 border-t border-gray-200 text-center">
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-primary-100 text-primary-800">
              Best For: {entry.data.bestFor}
            </span>
          </div>
        </div>
        
        <!-- CTA Button -->
        <div class="text-center">
          <AmazonButton 
            productUrl={entry.data.amazonUrl}
            productName={`Get ${entry.data.title}`}
            price={entry.data.price}
            className="transform hover:scale-105 shadow-lg"
          />
        </div>
      </div>
    </div>
    
    <!-- Featured Image -->
    {entry.data.image && (
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <img 
          src={entry.data.image} 
          alt={entry.data.title}
          class="w-full h-64 md:h-96 object-cover rounded-lg shadow-lg"
          loading="eager"
        >
      </div>
    )}
    
    <!-- Content -->
    <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="bg-white rounded-lg shadow-sm p-8 md:p-12">
        <div class="prose prose-lg max-w-none">
          <Content />
        </div>
        
        {entry.data.amazon_button_url && (
          <div class="mt-12 pt-8 border-t border-gray-200">
            <AmazonCTAButton 
              url={entry.data.amazon_button_url}
              text={entry.data.amazon_button_text || "Buy on Amazon"}
            />
          </div>
        )}
      </div>
    </article>
    
    <!-- Bottom CTA -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 pb-12">
      <div class="bg-gradient-to-r from-primary-50 to-accent-50 rounded-lg p-8 text-center">
        <h3 class="text-2xl font-bold text-gray-900 mb-4">Ready to Purchase?</h3>
        <p class="text-gray-600 mb-6">Get the best deal on {entry.data.title} with our affiliate link below.</p>
        <AmazonButton 
          productUrl={entry.data.amazonUrl}
          productName={`Buy ${entry.data.title}`}
          price={entry.data.price}
          className="transform hover:scale-105"
        />
      </div>
    </div>
  </main>
  
  <Footer />
  
  <!-- Schema.org JSON-LD -->
  <script type="application/ld+json" set:html={JSON.stringify(schemaMarkup)}></script>
</BaseLayout>